<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on The Computable Book</title>
    <link>https://computablelabs.github.io/compspec/docs/</link>
    <description>Recent content in Docs on The Computable Book</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://computablelabs.github.io/compspec/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/attacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/attacks/</guid>
      <description>Attacks This chapter introduces you to known attacks on the Computable protocol and known defenses against such attacks. When developing Computable, we made some trade-offs. In particular, we&amp;rsquo;ve consistently voted for simplicity. This makes it possible for us to actually ship working code in reasonable timeframes. But our choice to go with simplicity means that there are some more sophisticated attacks that bad actors could execute against your data markets.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/capi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/capi/</guid>
      <description>CAPI: The Computable API We&amp;rsquo;ve covered the core Computable contracts at some depth in the last few chapters. However, we haven&amp;rsquo;t said too much detail about the actual datatrust softare. We&amp;rsquo;ll remedy that in this chapter.
Let&amp;rsquo;s start from first principles. A Datatrust is a system that is responsible for storing data off-chain. As we dicussed in the listings chapter, a listing is uniquely identified by its listingHash. It makes sense that the datatrust should key its listing data by listingHash.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/continuing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/continuing/</guid>
      <description>Continuing Your Journey Congrats on making it through the entire Computable book! You&amp;rsquo;ve come out on the other side ready to enter the Computable ecosystem and start building your own Computable data markets, libraries, and companies.
You might be now wondering how you can continue learning. As you&amp;rsquo;ve probably already realized, there&amp;rsquo;s a vast amount of material required to understand Computable from the bottom up. The system touches upon economics, systems software, blockchains, cryptography and more.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/contracts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/contracts/</guid>
      <description>The Computable Contracts In this chapter , we&amp;rsquo;ll briefly review the smart contracts that form the core of the Computable protocol. If you haven&amp;rsquo;t encountered smart contracts before, you might not have a clear idea of what they are. Briefly put, they are programs that run on the Ethereum blockchain. You might ask, why is this important? How is it different from just running a program on the cloud? The main difference is that smart contracts run in duplicate on every one of the thousands of nodes that constitute Ethereum.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/datatrust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/datatrust/</guid>
      <description>The Datatrust Alright, we&amp;rsquo;ve now talked through a whole set of the smart contracts in the system. You&amp;rsquo;ve learned about listings, the reserve, voting, and the tokens. Now onto the datatrust. There&amp;rsquo;s something tricky we&amp;rsquo;re going to have to wrestle with. Fundamentally, a datatrust is a piece of software that has to run off-chain (in a future chapter you&amp;rsquo;ll learn about the specification for this off-chain software) since it needs to store and serve potentially very large pieces of data.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/ethertoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/ethertoken/</guid>
      <description>Ether Token The first point of entry into the Computable ecosystem is the EtherToken contract. This contract is simply a wrapper for ETH that gives it an ERC-20 interface. You will need EtherToken for all your interactions with the Computable smart contracts.
To get started, you need to call the EtherToken.deposit() function and deposit some ETH
@public @payable def deposit(): &amp;quot;&amp;quot;&amp;quot; @notice Facilitate a user purchasing EtherToken with Eth at a 1:1 ratio &amp;quot;&amp;quot;&amp;quot; self.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/libraries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/libraries/</guid>
      <description>Developer Libraries Let&amp;rsquo;s say that you&amp;rsquo;re a developer. You&amp;rsquo;ve read through the book so far, and you&amp;rsquo;re excited to get started working with the ecosystem. How do you get started? Well the first place you want to get started is probably interacting with some of the data markets that are out there already. How can you do that?
Let&amp;rsquo;s take a quick detour and talk through how interactions with smart contract systems on Ethereum work.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/listings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/listings/</guid>
      <description>Listings A data market holds a set of &amp;ldquo;listings&amp;rdquo;. Each listing corresponds to a chunk of data contributed by a single maker and managed within the data market. The listing is physically stored off-chain in the datatrust for this market.
As we will see soon, listings are governed by the on-chain voting system we discussed in the last chapter. Adding a new listing, and challenging someone else&amp;rsquo;s listing to have it listing both require on-chain votes.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/markettoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/markettoken/</guid>
      <description>Market Token MarketToken is a mintable and burnable ERC-20 token (we&amp;rsquo;ll say more on what those terms mean soon). The MarketToken is tied to a particular data market and is created when the data market is created. What is the purpose of MarketToken? Well simply put, the MarketToken corresponds to &amp;ldquo;shares&amp;rdquo; in a dataset. In everyday life, you&amp;rsquo;ve probably bought share in companies. These shares give you some rights. You can vote on some company decisions, and have rights to some portion of the company&amp;rsquo;s wealth (albeit in limited form).</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/parameters/</guid>
      <description>Market Parameters As we&amp;rsquo;ve mentioned at various times in the previous chapters, the data market is governed by a set of a parameters dictated within Parameterizer. These parameters govern the function of the market by setting various critical settings. These parameters can be modified via a stakeholder vote.
In this chapter, we&amp;rsquo;ll review the parameters that govern the data market. Most of these should seem similar, since you&amp;rsquo;ll have run into them already earlier in the book.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/reserve/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/reserve/</guid>
      <description>Reserve You&amp;rsquo;ve learned so far about the basic mechanics of data markets. The MarketToken tracking ownership, the voting mechanism, the process for getting listings accepted into the market. You now understand that a maker submits a listing candidate on-chain (and sends the data off-chain to the datatrust). If accepted, the maker is rewarded listing_reward of MarketToken. You might now be asking yourself, why would anyone bother? This MarketToken is a new ERC-20 token that no one has heard of.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/userjourney/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/userjourney/</guid>
      <description>User Journeys In this chapter, you&amp;rsquo;ll learn about the user-signed contract method calls required to fulfill various actions you might like to do with the Computable protocol.
Let&amp;rsquo;s start by noting that user-originated contract method calls must be signed by the user’s private key, which means you as the user are probably confirming signing through a Metamask dialog. This is the technique the first Computable dapps are using.
Second, contract method calls are asynchronous and may take an indefinite amount of time since they only complete when 1 (or really several) Ethereum blocks are mined.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://computablelabs.github.io/compspec/docs/voting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://computablelabs.github.io/compspec/docs/voting/</guid>
      <description>Voting As we&amp;rsquo;ve mentioned previously, MarketTokens are analogous to company shares. Just as company shareholders can vote on some company decisions, MarketToken stakeholders are allowed to vote on some data market governance questions. In fact, all major decisions in the data market are made by token holder vote. These decisions include which new listing candidates (a &amp;ldquo;listing candidate&amp;rdquo; is a chunk of data which has not yet been confirmed as a listing in the market) should be confirmed as listings, which challenged listings should be removed from the market (we&amp;rsquo;ll say more about challenges later), what changes should be made to the Parameterizer parameters (which govern the market&amp;rsquo;s behavior; more on this later), and who the datatrust operator should be.</description>
    </item>
    
  </channel>
</rss>